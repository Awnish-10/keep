{"ast":null,"code":"import _defineProperty from\"C:/Users/awnish/keep/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/awnish/keep/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/awnish/keep/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AddIcon from\"@material-ui/icons/Add\";import Fab from\"@material-ui/core/Fab\";import Zoom from\"@material-ui/core/Zoom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateArea(props){var _useState=useState({render:false,rowCount:\"1\"}),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState({title:\"\",content:\"\"}),_useState4=_slicedToArray(_useState3,2),note=_useState4[0],setNote=_useState4[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},_defineProperty({},name,value));});}function submitNote(event){props.onAdd(note);setNote({title:\"\",content:\"\"});event.preventDefault();}function handleClick(){console.log(\"clicked\");setTitle(function(prevValue){return{render:true,rowCount:\"3\"};});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"create-note\",children:[title.render&&/*#__PURE__*/_jsx(\"input\",{name:\"title\",onChange:handleChange,value:note.title,placeholder:\"Title\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"content\",onClick:handleClick,onChange:handleChange,value:note.content,placeholder:\"Take a note...\",rows:title.rowCount}),/*#__PURE__*/_jsx(Zoom,{in:title.render,children:/*#__PURE__*/_jsx(Fab,{onClick:submitNote,children:/*#__PURE__*/_jsx(AddIcon,{})})})]})});}export default CreateArea;","map":{"version":3,"sources":["C:/Users/awnish/keep/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","render","rowCount","title","setTitle","content","note","setNote","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","handleClick","console","log","prevValue"],"mappings":"sTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,C,wFAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,cAA0BL,QAAQ,CAAC,CACjCM,MAAM,CAAE,KADyB,CAEjCC,QAAQ,CAAE,GAFuB,CAAD,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAIA,eAAwBT,QAAQ,CAAC,CAC/BQ,KAAK,CAAE,EADwB,CAE/BE,OAAO,CAAE,EAFsB,CAAD,CAAhC,yCAAOC,IAAP,eAAaC,OAAb,eAKA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CAEAL,OAAO,CAAC,SAACM,QAAD,CAAc,CACpB,sCACKA,QADL,wBAEGF,IAFH,CAEUC,KAFV,GAID,CALM,CAAP,CAMD,CAED,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CAA2B,CACzBT,KAAK,CAACe,KAAN,CAAYT,IAAZ,EACAC,OAAO,CAAC,CACNJ,KAAK,CAAE,EADD,CAENE,OAAO,CAAE,EAFH,CAAD,CAAP,CAIAI,KAAK,CAACO,cAAN,GACD,CAED,QAASC,CAAAA,WAAT,EAAuB,CACrBC,OAAO,CAACC,GAAR,CAAY,SAAZ,EACAf,QAAQ,CAAC,SAACgB,SAAD,CAAe,CACtB,MAAO,CACLnB,MAAM,CAAE,IADH,CAELC,QAAQ,CAAE,GAFL,CAAP,CAID,CALO,CAAR,CAMD,CAED,mBACE,kCACE,cAAM,SAAS,CAAC,aAAhB,WACGC,KAAK,CAACF,MAAN,eACC,cACE,IAAI,CAAC,OADP,CAEE,QAAQ,CAAEO,YAFZ,CAGE,KAAK,CAAEF,IAAI,CAACH,KAHd,CAIE,WAAW,CAAC,OAJd,EAFJ,cASE,iBACE,IAAI,CAAC,SADP,CAEE,OAAO,CAAEc,WAFX,CAGE,QAAQ,CAAET,YAHZ,CAIE,KAAK,CAAEF,IAAI,CAACD,OAJd,CAKE,WAAW,CAAC,gBALd,CAME,IAAI,CAAEF,KAAK,CAACD,QANd,EATF,cAiBE,KAAC,IAAD,EAAM,EAAE,CAAEC,KAAK,CAACF,MAAhB,uBACE,KAAC,GAAD,EAAK,OAAO,CAAEa,UAAd,uBACE,KAAC,OAAD,IADF,EADF,EAjBF,GADF,EADF,CA2BD,CAED,cAAef,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nfunction CreateArea(props) {\r\n  const [title, setTitle] = useState({\r\n    render: false,\r\n    rowCount: \"1\"\r\n  });\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setNote((prevNote) => {\r\n      return {\r\n        ...prevNote,\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitNote(event) {\r\n    props.onAdd(note);\r\n    setNote({\r\n      title: \"\",\r\n      content: \"\"\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  function handleClick() {\r\n    console.log(\"clicked\");\r\n    setTitle((prevValue) => {\r\n      return {\r\n        render: true,\r\n        rowCount: \"3\"\r\n      };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"create-note\">\r\n        {title.render && (\r\n          <input\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            value={note.title}\r\n            placeholder=\"Title\"\r\n          />\r\n        )}\r\n        <textarea\r\n          name=\"content\"\r\n          onClick={handleClick}\r\n          onChange={handleChange}\r\n          value={note.content}\r\n          placeholder=\"Take a note...\"\r\n          rows={title.rowCount}\r\n        />\r\n        <Zoom in={title.render}>\r\n          <Fab onClick={submitNote}>\r\n            <AddIcon />\r\n          </Fab>\r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n"]},"metadata":{},"sourceType":"module"}